@using CarrierConstruct.Blazor.Components.UI
@using CarrierConstruct.Blazor.Interfaces

<p class="cc-h2">Flight Deck</p>

@*<div class="cc-flight-deck-outline-outer">
    <div class="cc-flight-deck-outline-inner">
        
        <div class="cc-flight-deck-parking section-1">
            <p>1</p>
            <p>2</p>
            <p>3</p>
        </div>
        
        <div class="cc-flight-deck-parking section-2">
            <p>1</p>
            <p>2</p>
            <p>3</p>
        </div>
        
        <div class="cc-flight-deck-elevator elevator-1">

        </div>
        
        <div class="cc-flight-deck-elevator elevator-2">

        </div>
        
        <div class="cc-flight-deck-elevator elevator-3">

        </div>

    </div>
</div>*@

<div class="cc-aircraft-container">
    @foreach (var aircraft in AircraftOnFlightDeck)
    {
        <AircraftChipComponent Aircraft="aircraft" 
                               OnAircraftChipClicked="(args) => SelectAircraft(args, aircraft)" 
                               OnAircraftChipHover="(args) => DisplayAircraftInformation(args, aircraft)" 
                               ClickDisabled="orderInProgress"
                               IsSelected="selectedAircraft.Contains(aircraft)"/>
    }
    
    @*@foreach (var parkingSpace in FlightDeckMap)
    {
        if (parkingSpace.Value == null)
        {
            <p>Empty</p>
        }
        else
        {
            <p>@parkingSpace.Value.Designation</p>
        }
    }*@

</div>

<button @onclick="OrderSelectedAircraftToHangar" class="cc-button">
    Order to Hangar
</button>

@*<div>
    <p>Selected Aircraft:</p>
    @foreach (IAircraft a in selectedAircraft)
    {
        <p>@a.Name - @a.Modex</p>
    }
</div>*@
